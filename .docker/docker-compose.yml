version: "3.9"

services:
  database:
    image: postgres:17
    container_name: postgres_server
    restart: unless-stopped
    ports:
      - 5431:5432

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h 127.0.0.1 -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20

    volumes:
      - pg_data:/var/lib/postgresql/data
    networks: [data-net]
    env_file: [.env]

  mlflow:
    build:
      context: .
      dockerfile: ./mlflow/Dockerfile
    container_name: mlflow_server
    depends_on:
      database:
        condition: service_healthy
    ports:
      - 5000:5000
    command:
      [
          "mlflow","server",
          "--host","0.0.0.0","--port","5000",
          "--backend-store-uri","postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}",
          "--artifacts-destination","${MLFLOW_ARTIFACTS_URI}",
          "--serve-artifacts"
      ]
    networks: [data-net]
    env_file: [.env]

  api:
    build:
      context: ..
      dockerfile: .docker/api/Dockerfile
    container_name: horse-api
    ports:
      - 8080:8080
    networks: [data-net]
    env_file: [.env]

volumes:
  pg_data:

networks:
  data-net:
      driver: bridge